name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb qt5-default
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        # Critical errors first
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Full linting with relaxed rules for development
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
    
    - name: Format check with black
      run: |
        black --check src/ tests/
    
    - name: Import sort check with isort
      run: |
        isort --check-only src/ tests/
    
    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional
    
    - name: Test with pytest
      run: |
        xvfb-run -a pytest tests/ --cov=src/hyprrice --cov-report=xml --cov-report=term-missing -v --tb=short
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  cli-test:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install package in development mode
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Test CLI commands
      run: |
        # Test help command
        hyprrice --help
        hyprrice --version
        
        # Test doctor command
        hyprrice doctor --json
        
        # Test check command
        hyprrice check --json
        
        # Test migrate command (should not fail)
        hyprrice migrate --force || true
        
        # Test plugins command
        hyprrice plugins list
    
    - name: Test package installation
      run: |
        # Build package
        python -m pip install build
        python -m build
        
        # Install from built package
        pip install dist/*.whl
        
        # Verify installation
        hyprrice --version
        hyprrice --help

  build:
    needs: [test, cli-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/ 
